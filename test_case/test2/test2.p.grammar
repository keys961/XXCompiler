At line 1: Node - program_head -> PROGRAM ID
At line 2: Node - constant_definition_part ->
At line 3: Node - simple_type -> TYPE_INTEGER
At line 3: Node - type_denoter -> simple_type
At line 3: Node - type_definition -> ID EQUAL type_denoter SEMICOLON
At line 3: Node - type_definition_list -> type_definition
At line 4: Node - type_definition_part -> TYPE type_definition_list
At line 5: Node - simple_type -> ID
At line 5: Node - type_denoter -> simple_type
At line 5: Node - variable_declaration -> ID COLON type_denoter
At line 5: Node - variable_declaration_list -> variable_declaration
At line 6: Node - simple_type -> ID
At line 6: Node - type_denoter -> simple_type
At line 6: Node - variable_declaration -> ID COLON type_denoter
At line 6: Node - variable_declaration_list -> variable_declaration_list SEMICOLON variable_declaration
At line 7: Node - simple_type -> ID
At line 7: Node - type_denoter -> simple_type
At line 7: Node - variable_declaration -> ID COLON type_denoter
At line 7: Node - variable_declaration_list -> variable_declaration_list SEMICOLON variable_declaration
At line 8: Node - variable_declaration_part -> VAR variable_declaration_list SEMICOLON
At line 8: Node - simple_type -> TYPE_INTEGER
At line 8: Node - parameter -> ID COLON simple_type
At line 8: Node - parameter_list -> parameter
At line 8: Node - simple_type -> TYPE_INTEGER
At line 8: Node - parameter -> ID COLON simple_type
At line 8: Node - parameter_list -> parameter_list SEMICOLON parameter
At line 8: Node - parameters -> LP parameter_list RP
At line 9: Node - constant_definition_part ->
At line 9: Node - type_definition_part -> 
At line 10: Node - simple_type -> ID
At line 10: Node - type_denoter -> simple_type
At line 10: Node - variable_declaration -> ID COLON type_denoter
At line 10: Node - variable_declaration_list -> variable_declaration
At line 11: Node - variable_declaration_part -> VAR variable_declaration_list SEMICOLON
At line 11: Node - procedure_function_declaration_part ->
At line 12: Node - variable_access -> ID
At line 12: Node - factor -> ID
At line 12: Node - term -> factor
At line 12: Node - expr -> term
At line 12: Node - expression -> expr
At line 12: Node - assign_statememt -> variable_access ASSIGN expression
At line 12: Node - stmt -> assign_statememt
At line 12: Node - statement -> stmt
At line 12: Node - statememt_list -> statememt SEMICOLON
At line 13: Node - compound_statement -> BEGIN_ statememt_list END
At line 13: Node - block_body_part -> compound_statement
At line 13: Node - block -> constant_definition_part type_definition_part variable_declaration_part procedure_function_declaration_part block_body_part
At line 13: Node - procedure_declaration -> PROCEDURE ID parameters SEMICOLON block SEMICOLON
At line 13: Node - procedure_function_declaration -> procedure_declaration 
At line 13: Node - procedure_function_declaration_part -> procedure_function_declaration
At line 15: Node - factor -> ID
At line 15: Node - term -> factor
At line 15: Node - expr -> term
At line 15: Node - expression -> expr
At line 15: Node - args -> expression
At line 15: Node - factor -> ID
At line 15: Node - term -> factor
At line 15: Node - expr -> term
At line 15: Node - expression -> expr
At line 15: Node - args -> args COMMA expression)
At line 15: Node - procedure_statement -> ID LP args RP
At line 15: Node - stmt -> procedure_statement
At line 15: Node - statement -> stmt
At line 15: Node - statememt_list -> statememt SEMICOLON
At line 16: Node - compound_statement -> BEGIN_ statememt_list END
At line 16: Node - block_body_part -> compound_statement
At line 16: Node - block -> constant_definition_part type_definition_part variable_declaration_part procedure_function_declaration_part block_body_part
At line 16: Node - program -> program_head SEMICOLON block DOT
